/**
 * TINY GENERATED CODE, DO NOT EDIT BY HAND
 * @project MatchThree
 */

console.log('runtime version: internal');

ut.importModule(ut.Core2D);
ut.importModule(ut.Math);
ut.importModule(ut);
ut.importModule(ut.Shared);
ut.importModule(ut.Core2D);
ut.importModule(ut.HTML);
ut.importModule(ut.Rendering);
ut.importModule(ut.Rendering);
ut.importModule(ut.HTML);
ut.importModule(ut.Core2D);
ut.importModule(ut.Rendering);
ut.importModule(ut.Rendering);
ut.importModule(ut.UILayout);
ut.importModule(ut.Particles);
ut.importModule(ut.Interpolation);
ut.importModule(ut.Audio);
ut.importModule(ut.Tweens);
ut.importModule(ut.Core2D);
ut.importModule(ut.UIControls);
ut.importModule(ut.Profiler);
ut.importModule(ut.Text);
ut.importModule(ut.HTML);
ut.main = function() {
    // Singleton world
    var world = new ut.World();

    // Schedule all systems
    var scheduler = world.scheduler();
    game.AnimateCutsceneSystemJS.update = new game.AnimateCutsceneSystem()._MakeSystemFn();
    game.PerformDinosaurAttackSystemJS.update = new game.PerformDinosaurAttackSystem()._MakeSystemFn();
    game.GemFallTweenEndSystemJS.update = new game.GemFallTweenEndSystem()._MakeSystemFn();
    game.GemSwapTweenEndSystemJS.update = new game.GemSwapTweenEndSystem()._MakeSystemFn();
    game.SwapGemSystemJS.update = new game.SwapGemSystem()._MakeSystemFn();
    game.CheckMatchSystemJS.update = new game.CheckMatchSystem()._MakeSystemFn();
    game.ActivateGemPowerUpSystemJS.update = new game.ActivateGemPowerUpSystem()._MakeSystemFn();
    game.CollectEggSystemJS.update = new game.CollectEggSystem()._MakeSystemFn();
    game.UpdateScoreSystemJS.update = new game.UpdateScoreSystem()._MakeSystemFn();
    game.TriggerDinosaurAttackSystemJS.update = new game.TriggerDinosaurAttackSystem()._MakeSystemFn();
    game.SpawnComboPowerUpSystemJS.update = new game.SpawnComboPowerUpSystem()._MakeSystemFn();
    game.SpawnGemExplosionSystemJS.update = new game.SpawnGemExplosionSystem()._MakeSystemFn();
    game.DeleteMatchedGemSystemJS.update = new game.DeleteMatchedGemSystem()._MakeSystemFn();
    game.RestoreGemSwapSystemJS.update = new game.RestoreGemSwapSystem()._MakeSystemFn();
    game.MoveHelicopterSystemJS.update = new game.MoveHelicopterSystem()._MakeSystemFn();
    game.MovePeopleSystemJS.update = new game.MovePeopleSystem()._MakeSystemFn();
    game.MoveScrollingObjectSystemJS.update = new game.MoveScrollingObjectSystem()._MakeSystemFn();
    game.SpawnHelicopterSystemJS.update = new game.SpawnHelicopterSystem()._MakeSystemFn();
    game.SpawnKidOnBikeSystemJS.update = new game.SpawnKidOnBikeSystem()._MakeSystemFn();
    game.SpawnPeopleSystemJS.update = new game.SpawnPeopleSystem()._MakeSystemFn();
    game.SpawnScrollingObjectSystemJS.update = new game.SpawnScrollingObjectSystem()._MakeSystemFn();
    game.UpdateDestructableStateSystemJS.update = new game.UpdateDestructableStateSystem()._MakeSystemFn();
    game.UpdateKidOnBikeSystemJS.update = new game.UpdateKidOnBikeSystem()._MakeSystemFn();
    game.CheckGameOverSystemJS.update = new game.CheckGameOverSystem()._MakeSystemFn();
    game.UpdateGameStateSystemJS.update = new game.UpdateGameStateSystem()._MakeSystemFn();
    game.UpdateSurvivalModeSystemJS.update = new game.UpdateSurvivalModeSystem()._MakeSystemFn();
    game.CreateNewGemBoardSystemJS.update = new game.CreateNewGemBoardSystem()._MakeSystemFn();
    game.ReplenishGemBoardSystemJS.update = new game.ReplenishGemBoardSystem()._MakeSystemFn();
    game.FindPossibleMatchSystemJS.update = new game.FindPossibleMatchSystem()._MakeSystemFn();
    game.PositionGemSystemJS.update = new game.PositionGemSystem()._MakeSystemFn();
    game.UpdateDestroyLineAnimationJS.update = new game.UpdateDestroyLineAnimation()._MakeSystemFn();
    game.UpdateGemVisualSystemJS.update = new game.UpdateGemVisualSystem()._MakeSystemFn();
    game.UpdateScoreGainLabelJS.update = new game.UpdateScoreGainLabel()._MakeSystemFn();
    game.ChangeSkinSystemJS.update = new game.ChangeSkinSystem()._MakeSystemFn();
    game.UpdateEggTutorialSystemJS.update = new game.UpdateEggTutorialSystem()._MakeSystemFn();
    game.UpdateMatchTutorialSystemJS.update = new game.UpdateMatchTutorialSystem()._MakeSystemFn();
    game.UpdateSurvivalTutorialSystemJS.update = new game.UpdateSurvivalTutorialSystem()._MakeSystemFn();
    game.UpdateTutorialHighlightSystemJS.update = new game.UpdateTutorialHighlightSystem()._MakeSystemFn();
    game.UpdateTutorialPointerSystemJS.update = new game.UpdateTutorialPointerSystem()._MakeSystemFn();
    game.AnimatePopupSystemJS.update = new game.AnimatePopupSystem()._MakeSystemFn();
    game.DisplayScoreSystemJS.update = new game.DisplayScoreSystem()._MakeSystemFn();
    game.UpdateCurrentWorldMapItemSystemJS.update = new game.UpdateCurrentWorldMapItemSystem()._MakeSystemFn();
    game.UpdateScreenTransitionJS.update = new game.UpdateScreenTransition()._MakeSystemFn();
    game.AnimateCollectedCurrencySystemJS.update = new game.AnimateCollectedCurrencySystem()._MakeSystemFn();
    game.AnimateNearDeathOpacitySystemJS.update = new game.AnimateNearDeathOpacitySystem()._MakeSystemFn();
    game.AnimateShakeSystemJS.update = new game.AnimateShakeSystem()._MakeSystemFn();
    game.AnimateTilingBackgroundSystemJS.update = new game.AnimateTilingBackgroundSystem()._MakeSystemFn();
    game.DestroyAfterDelaySystemJS.update = new game.DestroyAfterDelaySystem()._MakeSystemFn();
    game.FitScreenLayoutSystemJS.update = new game.FitScreenLayoutSystem()._MakeSystemFn();
    game.RenderModeSelectorJS.update = new game.RenderModeSelector()._MakeSystemFn();
    game.UpdateCustomButtonSystemJS.update = new game.UpdateCustomButtonSystem()._MakeSystemFn();
    game.UpdateLocalizedTextJS.update = new game.UpdateLocalizedText()._MakeSystemFn();
    scheduler.schedule(ut.HTML.InputHandler);
    scheduler.schedule(ut.HTML.AssetLoader);
    scheduler.schedule(ut.Core2D.SequencePlayerSystem);
    scheduler.schedule(ut.Shared.InputFence);
    scheduler.schedule(ut.UIControls.MouseInteractionSystem);
    scheduler.schedule(ut.UIControls.ToggleCheckedSystem);
    scheduler.schedule(ut.Shared.UserCodeStart);
    scheduler.schedule(ut.Shared.UserCodeEnd);
    scheduler.schedule(game.AnimateCutsceneSystemJS);
    scheduler.schedule(game.PerformDinosaurAttackSystemJS);
    scheduler.schedule(game.GemFallTweenEndSystemJS);
    scheduler.schedule(game.GemSwapTweenEndSystemJS);
    scheduler.schedule(game.SwapGemSystemJS);
    scheduler.schedule(game.CheckMatchSystemJS);
    scheduler.schedule(game.ActivateGemPowerUpSystemJS);
    scheduler.schedule(game.CollectEggSystemJS);
    scheduler.schedule(game.UpdateScoreSystemJS);
    scheduler.schedule(game.TriggerDinosaurAttackSystemJS);
    scheduler.schedule(game.SpawnComboPowerUpSystemJS);
    scheduler.schedule(game.SpawnGemExplosionSystemJS);
    scheduler.schedule(game.DeleteMatchedGemSystemJS);
    scheduler.schedule(game.RestoreGemSwapSystemJS);
    scheduler.schedule(game.MoveHelicopterSystemJS);
    scheduler.schedule(game.MovePeopleSystemJS);
    scheduler.schedule(game.MoveScrollingObjectSystemJS);
    scheduler.schedule(game.SpawnHelicopterSystemJS);
    scheduler.schedule(game.SpawnKidOnBikeSystemJS);
    scheduler.schedule(game.SpawnPeopleSystemJS);
    scheduler.schedule(game.SpawnScrollingObjectSystemJS);
    scheduler.schedule(game.UpdateDestructableStateSystemJS);
    scheduler.schedule(game.UpdateKidOnBikeSystemJS);
    scheduler.schedule(game.CheckGameOverSystemJS);
    scheduler.schedule(game.UpdateGameStateSystemJS);
    scheduler.schedule(game.UpdateSurvivalModeSystemJS);
    scheduler.schedule(game.CreateNewGemBoardSystemJS);
    scheduler.schedule(game.ReplenishGemBoardSystemJS);
    scheduler.schedule(game.FindPossibleMatchSystemJS);
    scheduler.schedule(game.PositionGemSystemJS);
    scheduler.schedule(game.UpdateDestroyLineAnimationJS);
    scheduler.schedule(game.UpdateGemVisualSystemJS);
    scheduler.schedule(game.UpdateScoreGainLabelJS);
    scheduler.schedule(game.ChangeSkinSystemJS);
    scheduler.schedule(game.UpdateEggTutorialSystemJS);
    scheduler.schedule(game.UpdateMatchTutorialSystemJS);
    scheduler.schedule(game.UpdateSurvivalTutorialSystemJS);
    scheduler.schedule(game.UpdateTutorialHighlightSystemJS);
    scheduler.schedule(game.UpdateTutorialPointerSystemJS);
    scheduler.schedule(game.AnimatePopupSystemJS);
    scheduler.schedule(game.DisplayScoreSystemJS);
    scheduler.schedule(game.UpdateCurrentWorldMapItemSystemJS);
    scheduler.schedule(game.UpdateScreenTransitionJS);
    scheduler.schedule(game.AnimateCollectedCurrencySystemJS);
    scheduler.schedule(game.AnimateNearDeathOpacitySystemJS);
    scheduler.schedule(game.AnimateShakeSystemJS);
    scheduler.schedule(game.AnimateTilingBackgroundSystemJS);
    scheduler.schedule(game.DestroyAfterDelaySystemJS);
    scheduler.schedule(game.FitScreenLayoutSystemJS);
    scheduler.schedule(game.RenderModeSelectorJS);
    scheduler.schedule(game.UpdateCustomButtonSystemJS);
    scheduler.schedule(game.UpdateLocalizedTextJS);
    scheduler.schedule(ut.UILayout.UICanvasSystem);
    scheduler.schedule(ut.UILayout.UILayoutSystem);
    scheduler.schedule(ut.UILayout.SetSprite2DSizeSystem);
    scheduler.schedule(ut.UILayout.SetRectTransformSizeSystem);
    scheduler.schedule(ut.Particles.ParticleSystem);
    scheduler.schedule(ut.Tweens.TweenSystem);
    scheduler.schedule(ut.UIControls.UIControlsSystem);
    scheduler.schedule(ut.UIControls.ButtonSystem);
    scheduler.schedule(ut.UIControls.ToggleSystem);
    scheduler.schedule(ut.HTML.TextMeasurement);
    scheduler.schedule(ut.Shared.RenderingFence);
    scheduler.schedule(ut.Core2D.UpdateLocalTransformSystem);
    scheduler.schedule(ut.Core2D.UpdateWorldTransformSystem);
    scheduler.schedule(ut.Core2D.Sprite2DInitSystem);
    scheduler.schedule(ut.Text.Text2DInitSystem);
    scheduler.schedule(ut.Core2D.DisplayList);
    scheduler.schedule(ut.Shared.PlatformRenderingFence);
    scheduler.schedule(ut.Rendering.RendererCanvas);
    scheduler.schedule(ut.Rendering.RendererGLWebGL);
    scheduler.schedule(ut.Audio.AudioSystem);

    // Initialize all configuration data
    var c0 = world.getConfigData(ut.Core2D.DisplayInfo);
    c0.width = 1920;
    c0.height = 1080;
    c0.autoSizeToFrame = true;
    c0.renderMode = 2;
    world.setConfigData(c0);
    var c1 = world.getConfigData(ut.Audio.AudioConfig);
    world.setConfigData(c1);
    var c2 = world.getConfigData(game.SkinConfiguration);
    c2.CurrentSkin = 0;
    world.setConfigData(c2);
    var c3 = world.getConfigData(game.SoundConfiguration);
    world.setConfigData(c3);
    var c4 = world.getConfigData(game.TutorialConfiguration);
    world.setConfigData(c4);
    var c5 = world.getConfigData(game.LocalizationConfiguration);
    var a0 = [new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem, new game.LocalizationItem];
    var s0 = new game.LocalizationItem();
    s0.TextID = "MainMenu_Play";
    s0.en = "Play";
    s0.fr = "Jouer";
    a0[0] = s0;
    var s1 = new game.LocalizationItem();
    s1.TextID = "MainMenu_WatchIntro";
    s1.en = "Watch intro";
    s1.fr = "Voir l'intro";
    a0[1] = s1;
    var s2 = new game.LocalizationItem();
    s2.TextID = "WorldMap_Best";
    s2.en = "Best";
    s2.fr = "Record";
    a0[2] = s2;
    var s3 = new game.LocalizationItem();
    s3.TextID = "GameUI_Score";
    s3.en = "Score";
    s3.fr = "Score";
    a0[3] = s3;
    var s4 = new game.LocalizationItem();
    s4.TextID = "Settings_Title";
    s4.en = "Settings";
    s4.fr = "Paramètres";
    a0[4] = s4;
    var s5 = new game.LocalizationItem();
    s5.TextID = "Settings_Sound";
    s5.en = "Sound";
    s5.fr = "Sons";
    a0[5] = s5;
    var s6 = new game.LocalizationItem();
    s6.TextID = "Settings_Music";
    s6.en = "Music";
    s6.fr = "Musique";
    a0[6] = s6;
    var s7 = new game.LocalizationItem();
    s7.TextID = "Settings_Close";
    s7.en = "Ok";
    s7.fr = "Ok";
    a0[7] = s7;
    var s8 = new game.LocalizationItem();
    s8.TextID = "PauseMenu_Title";
    s8.en = "Paused";
    s8.fr = "Pause";
    a0[8] = s8;
    var s9 = new game.LocalizationItem();
    s9.TextID = "PauseMenu_Quit";
    s9.en = "Quit";
    s9.fr = "Quitter";
    a0[9] = s9;
    var s10 = new game.LocalizationItem();
    s10.TextID = "PauseMenu_Resume";
    s10.en = "Resume";
    s10.fr = "Reprendre";
    a0[10] = s10;
    var s11 = new game.LocalizationItem();
    s11.TextID = "GameOver_Success";
    s11.en = "Success";
    s11.fr = "Victoire";
    a0[11] = s11;
    var s12 = new game.LocalizationItem();
    s12.TextID = "GameOver_Close";
    s12.en = "Back";
    s12.fr = "Menu";
    a0[12] = s12;
    var s13 = new game.LocalizationItem();
    s13.TextID = "GameOver_Failure";
    s13.en = "Game Over";
    s13.fr = "Échec";
    a0[13] = s13;
    var s14 = new game.LocalizationItem();
    s14.TextID = "GameOver_NewBest";
    s14.en = "New Best";
    s14.fr = "Nouveau record";
    a0[14] = s14;
    var s15 = new game.LocalizationItem();
    s15.TextID = "GameOver_Time";
    s15.en = "Time";
    s15.fr = "Temps";
    a0[15] = s15;
    var s16 = new game.LocalizationItem();
    s16.TextID = "Tutorial_Match";
    s16.en = "Match 3 gems to attack!";
    s16.fr = "Combinez 3 gemmes pour attaquer!";
    a0[16] = s16;
    var s17 = new game.LocalizationItem();
    s17.TextID = "Tutorial_Eggs";
    s17.en = "Make the eggs fall down!";
    s17.fr = "Faites tomber les oeufs!";
    a0[17] = s17;
    var s18 = new game.LocalizationItem();
    s18.TextID = "Tutorial_Survival";
    s18.en = "Combine and survive!";
    s18.fr = "Combinez pour survivre!";
    a0[18] = s18;
    var s19 = new game.LocalizationItem();
    s19.TextID = "Settings_Language";
    s19.en = "Language";
    s19.fr = "Langue";
    a0[19] = s19;
    var s20 = new game.LocalizationItem();
    s20.TextID = "Settings_ResetProgress";
    s20.en = "Reset Progress";
    s20.fr = "Réinitialiser";
    a0[20] = s20;
    var s21 = new game.LocalizationItem();
    s21.TextID = "Settings_Rendering";
    s21.en = "Renderer: {0}";
    s21.fr = "Rendu : {0}";
    a0[21] = s21;
    var s22 = new game.LocalizationItem();
    s22.TextID = "Credits_Title";
    s22.en = "Credits";
    s22.fr = "Crédits";
    a0[22] = s22;
    var s23 = new game.LocalizationItem();
    s23.TextID = "Settings_ResetProgressConfirm";
    s23.en = "Are you sure you want to delete all your progress?";
    s23.fr = "Voulez-vous vraiment supprimer votre progression?";
    a0[23] = s23;
    var s24 = new game.LocalizationItem();
    s24.TextID = "Credits_Art";
    s24.en = "Artist";
    s24.fr = "Artiste";
    a0[24] = s24;
    var s25 = new game.LocalizationItem();
    s25.TextID = "Credits_Code";
    s25.en = "Programmer";
    s25.fr = "Programmeur";
    a0[25] = s25;
    var s26 = new game.LocalizationItem();
    s26.TextID = "Credits_Outerminds";
    s26.en = "A game by Outerminds";
    s26.fr = "Un jeu de Outerminds";
    a0[26] = s26;
    var s27 = new game.LocalizationItem();
    s27.TextID = "Credits_Audio";
    s27.en = "Sound Designer";
    s27.fr = "Ingénieur audio";
    a0[27] = s27;
    var s28 = new game.LocalizationItem();
    s28.TextID = "Languages_Title";
    s28.en = "Languages";
    s28.fr = "Langues";
    a0[28] = s28;
    var s29 = new game.LocalizationItem();
    s29.TextID = "Languages_Cancel";
    s29.en = "Cancel";
    s29.fr = "Annuler";
    a0[29] = s29;
    var s30 = new game.LocalizationItem();
    s30.TextID = "WorldMap_EndCutscene";
    s30.en = "Watch Ending";
    s30.fr = "Voir la fin";
    a0[30] = s30;
    var s31 = new game.LocalizationItem();
    s31.TextID = "Objective_Points";
    s31.en = "Reach a score of {0} pts in {1} moves.";
    s31.fr = "Obtenez un score de {0} pts en {1} actions.";
    a0[31] = s31;
    var s32 = new game.LocalizationItem();
    s32.TextID = "Objective_Eggs";
    s32.en = "Collect {0} eggs in {1} moves.";
    s32.fr = "Ammassez {0} oeufs en {1} actions.";
    a0[32] = s32;
    var s33 = new game.LocalizationItem();
    s33.TextID = "Objective_Survival";
    s33.en = "Survive for {0} minutes.";
    s33.fr = "Survivez {0} minutes.";
    a0[33] = s33;
    c5.Texts = a0;
    world.setConfigData(c5);
    var c6 = world.getConfigData(game.GridConfiguration);
    c6.Width = 9;
    c6.Height = 9;
    c6.CellDimension = 24;
    c6.GridDefaultPositionY = -79;
    world.setConfigData(c6);

    // Create and initialize all resource entities
    UT_ASSETS_SETUP(world);

    // Create and initialize all startup entities
    ut.EntityGroup.instantiate(world, "game.Bootstrap");

    // Set up the WebSocket client
    ut._wsclient = ut._wsclient || {};
    ut._wsclient.world = world;

    // Start the player loop
    try { ut.Runtime.Service.run(world); } catch (e) { if (e !== 'SimulateInfiniteLoop') throw e; }

    ut.Profiler.startProfiling(world);
}
